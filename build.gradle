buildscript {
    ext.kotlin_version = '1.3.11'
    ext.slf4j_version = '1.6.2'
    ext.mockk_version = '1.8.13.kotlin13'
    ext.snakeyaml_version = '1.23'
    ext.flexmark_version = '0.42.0'
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

apply plugin: 'maven-publish'

group 'org.liamjd.bascule-lib'
version '0.0.16'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://dl.bintray.com/spekframework/spek-dev" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // snakeyaml
    compile group: 'org.yaml', name: 'snakeyaml', version: "$snakeyaml_version"
  
    // testCompile - coroutines
    testCompile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.0.1'
    
    // testing - junit
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.3.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.2")
    
    // testing - spek2
    testCompile group: "org.jetbrains.kotlin", name: "kotlin-test", version: "$kotlin_version"
   /* testImplementation('org.spekframework.spek2:spek-dsl-jvm:2.0.0-alpha.1') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntimeOnly('org.spekframework.spek2:spek-runner-junit5:2.0.0-alpha.1') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }*/

    // spek requires kotlin-reflect, can be omitted if already in the classpath
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    
    // testing - mockk
    testCompile group: "io.mockk", name: "mockk", version: "${mockk_version}"


    // markdown - probably want to be more selective with this!
    compile group: 'com.vladsch.flexmark', name: 'flexmark-all', version: "$flexmark_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform {
//        includeEngines 'spek2'
    }
}

// configure shadowJar
shadowJar {
    classifier = null
    minimize()
}

// don't include the kotlin runtime in the jar
configurations {
    runtime.exclude module: 'kotlin-stdlib-jdk8'
}

// deploy to maven local
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}
publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}

// building source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
